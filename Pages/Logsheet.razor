@page "/logsheet"
@using Growth_Strategy_Form_Recognizer.Data
@using System.Reflection
@inject IDataStorage DataStorage;
@inject IEnumerable<IFormAnalysis> FormAnalyses;
@inject IJSRuntime JSRuntime

<div style="position: relative; height: 100vh;top: 0" xmlns="http://www.w3.org/1999/html">

    <div class="d-flex gap-3">
        <div>
            <label for="miInputFile" class="btn btn-primary @_disableLoadBtn">
                @if (_loading == "Loading...")
                {
                    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                    <span>Loading...</span>
                }
                else
                {
                    <span>Select File</span>
                }
            </label>
            <InputFile id="miInputFile" OnChange="@LoadFile" style="display: none"/>
        </div>
        @if (_data != null)
        {
            <button class="btn btn-success" @onclick="ExportToExcel">Export to Excel</button>
        }
    </div>
    <div style="position: absolute; left: 0; width: 50%; max-height: 100%; overflow-scrolling: auto; top: 4vh">
        @if (_data != null)
        {
            <div style="background: #bcbebf; max-height: 100vh" class="mt-2 overflow-scroll">
                <table class="table table-bordered" id="logsheetData">
                    <tbody>
                        <tr>
                            <th>Farm Name</th>
                            <td>@_data.FarmName</td>
                        </tr>
                        <tr>
                            <th>Treater Number</th>
                            <td>@_data.TreaterNumber</td>
                        </tr>
                        <tr>
                            <th>Legal Land Location</th>
                            <td>@_data.LegalLandLocation</td>
                        </tr>
                        <tr>
                            <th>Operator</th>
                            <td>@_data.Operator</td>
                        </tr>
                        <tr>
                            <th>Date</th>
                            <td>@_data.Date</td>
                        </tr>
                        <tr>
                            <th>Temperature</th>
                            <td>@_data.Temperature</td>
                        </tr>
                        <tr>
                            <th>Notes</th>
                            <td>@_data.Notes</td>
                        </tr>
                        <tr>
                            <th>Product Applied 1</th>
                            <td>@_data.ProductApplied1</td>
                        </tr>
                        <tr>
                            <th>Product Applied 2</th>
                            <td>@_data.ProductApplied2</td>
                        </tr>
                        <tr>
                            <th>Product Applied 3</th>
                            <td>@_data.ProductApplied3</td>
                        </tr>
                        <tr>
                            <th>Product Applied 4</th>
                            <td>@_data.ProductApplied4</td>
                        </tr>
                        <tr>
                            <th>Samples Taken</th>
                            <td>@(_data.SamplesTaken == ":selected:" ? "Yes" : "No")</td>
                        </tr>
                        <tr>
                            <th>Product Received On Site</th>
                            <td>@(_data.ProductReceivedOnSite == ":selected:" ? "Yes" : "No")</td>
                        </tr>
                        <tr>
                            <th>Operator Signature</th>
                            <td>@_data.OperatorSignature</td>
                        </tr>
                    </tbody>
                </table>
                <table class="table table-bordered" id="productApplied">
                    <tbody>
                    <tr>
                        @{
                            var props = _dataTableType?.GetProperties();
                            if (props != null)
                            {
                                foreach (var prop in props)
                                {
                                    <th>@{
                                            switch (prop.Name)
                                            {
                                                case "Product1":
                                                    <span>@_data.ProductApplied1</span>
                                                    break;
                                                case "Product2":
                                                    <span>@_data.ProductApplied2</span>
                                                    break;
                                                case "Product3":
                                                    <span>@_data.ProductApplied3</span>
                                                    break;
                                                case "Product4":
                                                    <span>@_data.ProductApplied4</span>
                                                    break;
                                                default:
                                                    <span>@(prop.Name ?? "---")</span>
                                                    break;    
                                            }
                                        }</th>
                                }
                            }
                        }
                    </tr>
                    @foreach (var row in _data.Table)
                    {
                        <tr>
                            @foreach (var prop in row.GetType().GetProperties())
                            {
                                <td>@prop.GetValue(row)</td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="d-flex mt-4 gap-2 w-auto">
                <img 
                    class="rounded-3"
                    style="filter: fade(5)"
                    src="images/image_67172865.jpg" alt="Logsheet image"/>
                <h6 class="text-secondary align-self-end">Example Document</h6>
            </div>
            
        }
    </div>
    @if (_fileUrl != null)
    {
        var uri = new Uri(_fileUrl);
        var fileName = Path.GetFileName(uri.LocalPath);
        var extension = Path.GetExtension(fileName);
        var mimeType = "";
        
        switch (extension)
        {
            case ".jpg":
            case ".jpeg":
            case ".png":
            case ".gif":
                mimeType = "image/" + extension.TrimStart('.');
                break;
            case ".pdf":
                mimeType = "application/pdf";
                break;
        }

        <div style="position: absolute; right: 0; width: 50%; height: 100%; top: 4vh">
            <iframe src="@_fileUrl" type="@mimeType" style="width: 100%; height: 100%"></iframe>
        </div>
    }
</div>

@code
{
    private async Task ExportToExcel()
    {
        var tableIDs = new { logsheetData = "logsheetData", productApplied = "productApplied" };
        await JSRuntime.InvokeVoidAsync("exportTablesToExcel", tableIDs);
    }
}
