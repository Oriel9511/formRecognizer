@page "/DocQuery"
@using Growth_Strategy_Form_Recognizer.Data
@inject IDataStorage DataStorage;

<div style="position: relative; height: 100vh;top: 0" xmlns="http://www.w3.org/1999/html">
    <div class="d-block">
            <div style="display: flex; align-items: center">
                <label for="miInputFile" class="btn btn-primary">
                    Select File    
                </label>
                <div style="margin-left: 1rem; padding-top: .6rem">
                    <p>@_fileName</p>
                </div>
                <InputFile id="miInputFile" OnChange="@LoadFile" style="display: none"/>
            </div>
        <div class="d-flex" style="margin-top: 1rem">
            <input type="text" placeholder="Folder Name" style="border-right: none"/>
            <button class="btn btn-primary @_disableLoadBtn" onclick="@UploadFile" style="border-left: none">
                @if (_loading == "Loading...")
                {
                    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                    <span>Loading...</span>
                }
                else
                {
                    <span>Upload File</span>
                }
            </button>
        </div>
            <div style="left: 0; width: 100%; max-height: 100%; overflow-scrolling: auto;">
                    <div style="background: #bcbebf; max-height: 100vh" class="mt-2 overflow-scroll">
        
                    </div>
            </div>
    </div>
</div>

@code {
    public string? Error;
    private string? _fileUrl;
    private string _loading = "";
    private string _disableLoadBtn = "";
    private Stream? _stream;
    private string? _fileName;
    private string? _contentType;

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        try
        {
            _fileUrl = null;
            var file = e.File;

            if (file==null)
            {
                Error = "Some error just happened";
                return;
            }

            _stream = file.OpenReadStream();
            _fileName = file.Name;
            _contentType = file.ContentType;
        }catch (Exception exception)
        {
            Console.WriteLine(exception);
        }
    }
    
    private async Task UploadFile()
    {
        try
        {
            _disableLoadBtn = "disabled";
            _loading = "Loading...";
            var fileUrl = await DataStorage.UploadFile(_stream, _fileName, _contentType);
            _fileUrl = fileUrl;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}